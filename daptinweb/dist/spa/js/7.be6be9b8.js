(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[7],{2711:function(e,t,a){"use strict";a.r(t);var o=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"row"},[a("div",{staticClass:"col-2"},[a("div",{staticClass:"row"},[a("table-side-bar")],1)]),a("div",{staticClass:"col-10"},[e.tableSchema?a("div",{staticClass:"col-10 q-pa-md"},[a("table-editor",{attrs:{table:e.tableSchema},on:{save:e.saveTable}})],1):e._e()])])},n=[],l=(a("8e6e"),a("8a81"),a("ac6a"),a("cadf"),a("06db"),a("456d"),a("28a5"),a("c47a")),c=a.n(l),i=a("2f62");a("a633");function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){c()(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var b={name:"CreateTable",methods:s({saveTable:function(e){var t=this;if(0!==e.ColumnModel.length){for(var a=0;a<e.ColumnModel.length;a++){var o=e.ColumnModel[a];if(o.ColumnType.indexOf(" - ")>-1){var n=o.ColumnType.split(" - ");o.ColumnType=n[0],o.DataType=n[1],e.ColumnModel[a]=o}}console.log("Table data",e);var l=e.Relations;this.$q.notify("Updating table structure "+e.TableName),t.$q.loading.show(),this.executeAction({tableName:"world",actionName:"upload_system_schema",params:{schema_file:[{name:"empty.json",file:"data:application/json;base64,"+btoa(JSON.stringify({Tables:[{TableName:e.TableName,Columns:e.ColumnModel}],Relations:l})),type:"application/json"}]}}).then((function(a){console.log("Update table",a),setTimeout((function(){t.$q.notify("Updated table structure, refreshing schema"),t.refreshTableSchema(e.TableName).then((function(){t.$q.notify("Schema refreshed"),t.$q.loading.hide()})).catch((function(e){t.$q.notify("Failed to refresh schema "+e),t.$q.loading.hide()}))}),2e3)})).catch((function(e){t.$q.notify("Failed to create "+e),t.$q.loading.hide()}))}else this.$q.notify("Please add columns")},loadTable:function(){var e=this;e.tableSchema=null,console.log("Edit table",this.$route.params.tableName),this.getTableSchema(this.$route.params.tableName).then((function(t){e.tableSchema=t,console.log("Schema",e.tableSchema)}))}},Object(i["b"])(["getTableSchema","executeAction","refreshTableSchema"])),data:function(){return{text:"",tableSchema:null}},mounted:function(){this.loadTable()},watch:{"$route.params.tableName":function(e){this.loadTable()}},computed:s({},Object(i["c"])([]))},u=b,m=a("2877"),d=Object(m["a"])(u,o,n,!1,null,null,null);t["default"]=d.exports}}]);